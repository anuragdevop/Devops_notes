pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKER_IMAGE = "myorg/pc-inventory-app"
        GIT_REPO = "https://github.com/your-repo/pc-inventory.git"
        BRANCH_NAME = "main"
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: "${env.BRANCH_NAME}", url: "${env.GIT_REPO}"
            }
        }
        stage('Build with Maven') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Static Code Analysis with SonarQube') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }
        stage('Security Testing with OWASP ZAP') {
            steps {
                script {
                    sh 'zap-cli quick-scan --self-contained --start-options "-config api.key=12345" http://myapp-url.com'
                }
            }
        }
        stage('Docker Build & Push') {
            steps {
                script {
                    docker.build("${env.DOCKER_IMAGE}:${env.BRANCH_NAME}")
                        .withRegistry('', "${env.DOCKER_CREDENTIALS_ID}")
                        .push()
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh 'helm upgrade --install pc-inventory-app ./helm/pc-inventory-app'
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
